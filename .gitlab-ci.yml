image: node:latest

before_script:
  - apt-get update -qq && apt-get install
  - node -v && npm -v
  - npm install

stages:
#  - lint
#  - build
#  - test
  - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
  policy: pull

#lint-job:
#  stage: lint
#  script:
#    - echo "Linting code..."
#    - npm run lint

#build-job:
#  stage: build
#  script:
#    - echo "Building app..."
#    - echo "window.VERSION='$(calculated_version)'; window.COMMIT='$CI_COMMIT_SHORT_SHA'; window.PIPELINE='$CI_PIPELINE_ID';" > version.js
#    - npm run build
#  artifacts:
#    paths:
#      - build
#    expire_in: 1 week

#unit-test-job:
#  stage: test
#  script:
#    - echo "Running tests..."
#    - npm run test

deploy-job:
  stage: deploy
  allow_failure: true
  script:
    - echo "Deploying application..."
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY" | base64 -d)
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - scp -prq ./build/* $USER_NAME@$SERVER_NAME:/home/$USER_NAME/smartskills/ui/
    - cd build/static
    - touch "version.txt"
    - ls
    - echo "window.COMMIT='$CI_COMMIT_SHA'; window.BRANCH='$CI_COMMIT_REF_NAME';" >> version.txt
    - cat version.txt
    - echo "Application successfully deployed."
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      when: manual
