image: node:16.13.0

before_script:
  - echo $CI_COMMIT_TITLE
  - apt-get update -qq && apt-get install
  - node -v && npm -v
  - npm install

stages:
#  - lint
  - build
#  - test
  - deploy
#  - e2e
  - cleanup

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
  policy: pull

#Lint:
#  stage: lint
#  script:
#    - echo "Linting code..."
#    - npm run lint
#  only:
#    - master
#    - merge_requests

Build:
  stage: build
  script:
    - echo "Building app..."
    - npm run build
    - cd build
    - touch "version.js"
    - echo "window.COMMIT='$CI_COMMIT_SHA'; window.BRANCH='$CI_COMMIT_REF_NAME'; window.PIPELINE_LINK='$CI_PIPELINE_URL'; window.BASEPATH='/'" > version.js
  artifacts:
    paths:
      - build
    expire_in: 1 week
  only:
    - master

Build Branch:
  stage: build
  variables:
    ASSET_PATH: /branches/$CI_COMMIT_REF_SLUG
    BRANCH_LINK: $CI_PROJECT_URL/-/merge_requests/$CI_MERGE_REQUEST_IID
  script:
    - echo "Building app..."
    - npm run build
    - cd build
    - echo "window.COMMIT='$CI_COMMIT_SHA'; window.BRANCH='$CI_COMMIT_REF_NAME'; window.PIPELINE_LINK='$CI_PIPELINE_URL'; window.BASEPATH='/branches/$CI_COMMIT_REF_SLUG/'; window.BRANCH_LINK='$BRANCH_LINK'" > version.js
    - sed -i'' 's/<base href="\/">/<base href="\/branches\/'$CI_COMMIT_REF_SLUG'\/">/' index.html
    - sed -i'' 's/<script src="\/version.js">/<script src="\/branches\/'$CI_COMMIT_REF_SLUG'\/version.js">/' index.html
    - sed -i'' "s/\/static\/js/\/branches\/$CI_COMMIT_REF_SLUG\/static\/js/g" index.html
    - sed -i'' "s/\/static\/css/\/branches\/$CI_COMMIT_REF_SLUG\/static\/css/g" index.html
  only:
    - merge_requests
  except:
    - master
  artifacts:
    paths:
      - build
    expire_in: 1 week
  environment:
    name: $CI_COMMIT_REF_SLUG
    url: http://skills.lohika.com/branches/$CI_COMMIT_REF_SLUG
    on_stop: Remove Branch Directory
#
#Unit Tests:
#  stage: test
#  script:
#    - echo "Running tests..."
#    - npm run test
#  only:
#    - master
#    - merge_requests

Deploy:
  stage: deploy
  allow_failure: true
  script:
    - echo "Deploying application..."
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY" | base64 -d)
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - scp -prq ./build/* $USER_NAME@$SERVER_NAME:/home/$USER_NAME/smartskills/ui/
    - echo "Application successfully deployed."
  only:
    - master

Deploy Branch:
  stage: deploy
  allow_failure: true
  script:
    - echo "Deploying application..."
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY" | base64 -d)
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh $USER_NAME@$SERVER_NAME "mkdir -p ~/smartskills/ui/branches"
    - ssh $USER_NAME@$SERVER_NAME "mkdir -p ~/smartskills/ui/branches/$CI_COMMIT_REF_SLUG"
    - scp -prq ./build/* $USER_NAME@$SERVER_NAME:/home/$USER_NAME/smartskills/ui/branches/$CI_COMMIT_REF_SLUG
    - echo "Application successfully deployed."
  only:
    - merge_requests
  except:
    - master

Remove Branch Directory:
  before_script:
    - echo "Ignoring global before_script"
  stage: cleanup
  script:
#    - echo "Removing branch directory"
#    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
#    - eval $(ssh-agent -s)
#    - ssh-add <(echo "$SSH_PRIVATE_KEY" | base64 -d)
#    - mkdir -p ~/.ssh
#    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
#    - ssh $USER_NAME@$SERVER_NAME "rm -r ~/smartskills/ui/branches/$CI_COMMIT_REF_SLUG"
    - echo $CI_COMMIT_MESSAGE
    - echo $CI_COMMIT_TITLE
    - SOURCE_BRANCH=$(echo $CI_COMMIT_MESSAGE | sed 's/title//; s/Merge branch//; s/://; s/into//; s/master//; s/ //g; s/"//g;' | sed "s/'//g")
    - echo $SOURCE_BRANCH
    - 'echo "Commit sha: $CI_COMMIT_SHA"'
    - 'echo " ====> API request: $CI_API_V4_URL/projects/$PROJECT_ID/repository/commits/$CI_COMMIT_SHA"'
    - 'RESPONSE=$(curl --header "PRIVATE-TOKEN: $CI_PRIVATE_TOKEN" "$CI_API_V4_URL/projects/$CI_PROJECT_ID/repository/commits/$CI_COMMIT_SHA")'
    - 'echo "response: $RESPONSE"'
    - SOURCE_BRANCH=$(echo $RESPONSE |  grep -Po '"title":.*?[^\\]"' | sed 's/title//; s/Merge branch//; s/://; s/into//; s/master//; s/ //g; s/"//g;' | sed "s/'//g")
    - echo "Source docker-tag to remove $SOURCE_BRANCH"
    - 'curl --silent --request DELETE --header "PRIVATE-TOKEN: $CI_PRIVATE_TOKEN" "$CI_API_V4_URL/projects/$PROJECT_ID/registry/repositories/$REGISTRY_ID/tags/$SOURCE_BRANCH"'
  when: manual
  only:
    - master
  environment:
    name: $CI_COMMIT_REF_SLUG
    action: stop

#Cypress Tests:
#  image: cypress/browsers:node14.17.0-chrome88-ff89
#  stage: e2e
#  allow_failure: true
#  variables:
#    BASE_URL: "http://${SERVER_NAME}"
#  script:
#    - npx cypress run --browser chrome --config baseUrl=$BASE_URL
#  artifacts:
#    when: always
#    paths:
#      - cypress/videos/**/*.mp4
#      - cypress/screenshots/**/*.png
#    expire_in: 1 day
#  only:
#    - master
#
#Branch Cypress Tests:
#  image: cypress/browsers:node14.17.0-chrome88-ff89
#  stage: e2e
#  allow_failure: true
#  variables:
#    BASE_URL: "http://${SERVER_NAME}/branches/${CI_COMMIT_REF_SLUG}"
#  script:
#    - npx cypress run --browser chrome --config baseUrl=$BASE_URL
#  artifacts:
#    when: always
#    paths:
#      - cypress/videos/**/*.mp4
#      - cypress/screenshots/**/*.png
#    expire_in: 1 day
#  only:
#    - merge_requests
#  except:
#    - master