image: docker:20.10.10
services:
  - docker:20.10.10-dind

stages:
  - build_test_image
  - quality
  - build_release_image
  - deploy

variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

.before_script_template:
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY

build-test-image:
    stage: build_test_image
    extends: .before_script_template
    script:
      - docker build -t $CONTAINER_TEST_IMAGE .
      - docker push $CONTAINER_TEST_IMAGE

linter:
  stage: quality
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  script:
    - cd /app
    - npm run lint

unit-tests:
  stage: quality
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  script:
    - cd /app
    - npm run test

build-and-push-to-registry:
  stage: build_release_image
  extends: .before_script_template
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker run $CONTAINER_RELEASE_IMAGE npm run build
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - develop

deploy-development-server:
  stage: deploy
  script:
    - chmod og= $DEPLOY_DEVELOP_SSH_KEY
    - apk update && apk add openssh-client
    - ssh -i $DEPLOY_DEVELOP_SSH_KEY -o StrictHostKeyChecking=no $STAGING_SERVER_USER@$STAGING_SERVER_IP "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
    - ssh -i $DEPLOY_DEVELOP_SSH_KEY -o StrictHostKeyChecking=no $STAGING_SERVER_USER@$STAGING_SERVER_IP "docker pull $CONTAINER_RELEASE_IMAGE"
    - ssh -i $DEPLOY_DEVELOP_SSH_KEY -o StrictHostKeyChecking=no $STAGING_SERVER_USER@$STAGING_SERVER_IP "cd /home/ubuntu/smartskills-deployment && docker-compose up -d"
  environment:
    name: development
    url: http://172.30.27.132
  only:
    - develop
